{"data":{"site":{"siteMetadata":{"title":"Edgar Pino's Blog","author":"Edgar Pino"}},"markdownRemark":{"id":"2251976d-4022-579c-9c2f-16dcde4ed065","excerpt":"Welcome to part three of Getting Started with Ecto. In the  last post , we covered how to create migrations, schemas, and changesets. Inâ€¦","html":"<p>Welcome to part three of Getting Started with Ecto. In the <a href=\"/getting-started-with-ecto-part-2/\">last post</a>, we covered how to create migrations, schemas, and changesets. In this post we will cover how to execute queries agains a database.</p>\n<h2>Ecto is not an ORM</h2>\n<p>If you come from Ruby on Rails or .Net then you might be familiar with Active Record or Entity framework. You might be used to doing something like <code class=\"language-text\">user.Save()</code> or <code class=\"language-text\">User.Find()</code>.These and many frameworks follow the Active Record design pattern which is an approach of accessing data in a database. One of the major drawbacks of this pattern is that your domain is usually tightly coupled to a certains persistence layer. </p>\n<h2>Getting</h2>","frontmatter":{"title":"Getting Started with Ecto Part 3: Queries","date":"December 03, 2018"}}},"pageContext":{"slug":"/getting-started-with-ecto-part-3/","previous":{"fields":{"slug":"/getting-started-with-ecto-part-2/"},"frontmatter":{"title":"Getting Started with Ecto Part 2: Migrations, Schemas, and Changeset"}},"next":null}}