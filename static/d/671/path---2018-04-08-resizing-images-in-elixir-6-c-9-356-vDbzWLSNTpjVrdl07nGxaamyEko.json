{"data":{"site":{"siteMetadata":{"title":"Edgar Pino's Blog","author":"Edgar Pino"}},"markdownRemark":{"id":"8a9adda9-08fa-5d93-b387-5c2689c8fc2d","excerpt":"I’ve been working on a simple Elixir and Phoenix web app that  extracts text found in images  and I ran into a problem, people were…","html":"<p>I’ve been working on a simple Elixir and Phoenix web app that <a href=\"https://image-to-text.edgardev.com/\">extracts text found in images</a> and I ran into a problem, people were uploading large images. I only needed images that were around 1200x1200 pixels.</p>\n<p>I did some Googling around and I stumbled across <a href=\"https://github.com/route/mogrify\">Mogrify</a>, a simple Elixir library to process images. Under the hood it uses <a href=\"https://www.imagemagick.org/script/index.php\">ImageMagick</a>, a commandline tool for displaying, converting, and editing raster image and vector image files.</p>\n<h2>Using Mogrify</h2>\n<p>Mogrify is simple and easy to use and the only requirement is to have ImageMagick installed on your computer. See <a href=\"https://www.imagemagick.org/script/install-source.php\">installation instructions</a> for more info.</p>\n<ol>\n<li>\n<p>Add <code class=\"language-text\">{:mogrify, &quot;~&gt; 0.5.6&quot;}</code> to your <code class=\"language-text\">mix.exs</code> file and run <code class=\"language-text\">mix deps.get</code>.</p>\n</li>\n<li>\n<p>Import it on the module you intend to use it on. Here’s how my module looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token keyword\">defmodule</span> ImgToTxt<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span>Image <span class=\"token keyword\">do</span>\n <span class=\"token keyword\">import</span> Mogrify\n\n <span class=\"token attribute variable\">@doc</span> <span class=\"token string\">\"\"\"\n Resize images given imagePath, width, height, and optional Mogrify opts\n \"\"\"</span>\n <span class=\"token keyword\">def</span> resize<span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">\\\\</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n   <span class=\"token comment\"># Continue reading</span>\n <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n</li>\n<li>\n<p>To resize images you first <code class=\"language-text\">open</code> the file by give it the path to the image. When calling <code class=\"language-text\">open</code>, it should return something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">iex<span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> Mogrify.open<span class=\"token punctuation\">(</span><span class=\"token string\">\"test/assets/test.png\"</span><span class=\"token punctuation\">)</span>\n%Mogrify.Image<span class=\"token punctuation\">{</span>\n animated: false,\n dirty: %<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>,\n ext: <span class=\"token string\">\".png\"</span>,\n format: nil,\n frame_count: 1,\n height: nil,\n operations: <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>,\n path: <span class=\"token string\">\"img_to_txt/test/assets/test.png\"</span>,\n width: nil\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, let’s add that to our function</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token keyword\">def</span> resize<span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">\\\\</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n   open<span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n</li>\n<li>\n<p>Now that we have our file opened, let’s resize it. Mogrify provides the following functions to resize images: <a href=\"https://hexdocs.pm/mogrify/Mogrify.html#resize/2\"><code class=\"language-text\">resize</code></a>, <a href=\"https://hexdocs.pm/mogrify/Mogrify.html#resize_to_fill/2\"><code class=\"language-text\">resize_to_fill</code></a>, and <a href=\"https://hexdocs.pm/mogrify/Mogrify.html#resize_to_limit/2\"><code class=\"language-text\">resize_to_limit</code></a>. I choose the <code class=\"language-text\">resize_to_limit</code> because it will resize the image to fit within the specified dimensions while retaining the original aspect ratio. It will also only resize the image if it is larger than the specified dimensions. Let’s add that to our function:</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token keyword\">def</span> resize<span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">\\\\</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n   open<span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">)</span>\n   <span class=\"token operator\">|></span> resize_to_limit<span class=\"token punctuation\">(</span><span class=\"token string\">~s(<span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span>width<span class=\"token delimiter punctuation\">}</span></span>x<span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span>height<span class=\"token delimiter punctuation\">}</span></span>)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n</li>\n<li>\n<p>The last thing is to save our resized image by using the <code class=\"language-text\">save</code> function. Mogrify will save the image on a temporary file. You can change that by passing in the <code class=\"language-text\">path</code> as an option. See <a href=\"https://hexdocs.pm/mogrify/Mogrify.html#save/2\">docs</a> for more info. Lets add that to our function:</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token keyword\">def</span> resize<span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">\\\\</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n  open<span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">|></span> resize_to_limit<span class=\"token punctuation\">(</span><span class=\"token string\">~s(<span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span>width<span class=\"token delimiter punctuation\">}</span></span>x<span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span>height<span class=\"token delimiter punctuation\">}</span></span>)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">|></span> save<span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n</li>\n</ol>\n<p>We are done, I hope this was helpful and feel free to comment.</p>","frontmatter":{"title":"Resizing Images In Elixir with Mogrify","date":"April 08, 2018"}}},"pageContext":{"slug":"/2018/04/08/resizing-images-in-elixir","previous":{"fields":{"slug":"/2017/08/23/understading-k-means"},"frontmatter":{"title":"Understading K-Means"}},"next":{"fields":{"slug":"/2018/04/08/imagemagick-heroku-buildpack"},"frontmatter":{"title":"Heroku 16 Imagemagick Buildpack"}}}}