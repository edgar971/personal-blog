{"data":{"site":{"siteMetadata":{"title":"Edgar Pino's Blog","author":"Edgar Pino"}},"markdownRemark":{"id":"26f4a030-958d-5fd8-a70b-db4f8aafa164","excerpt":"I recently starting learning Tensorflow.js to create machine learning models on the browser. It took me a few weeks to learn the API but I…","html":"<p>I recently starting learning Tensorflow.js to create machine learning models on the browser. It took me a few weeks to learn the API but I finally got something working.</p>\n<p>The demo is a simple number predictor demo built using a <a href=\"https://js.tensorflow.org/\">Tensorflow.js</a> model trained on the <a href=\"http://yann.lecun.com/exdb/mnist/\">MNIST</a> dataset.\n<img src=\"https://camo.githubusercontent.com/3feb47be5068f7c1ea369d8ed5f714d625b43fde/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f333438656d5876714b4d4e585a484a327a432f67697068792e676966\" width=\"100%\" alt=\"project demo\"></p>\n<p>There are two models in this example. One that was already trained locally on my computer and the browser model which is train right on your browser. I was very impressed by the accuracy of the browser trained model. I was able to get about 95% accuracy in some cases. I might create a tutorial but for now here’s a link to the <a href=\"https://edgar971.github.io/number-predictor/\">demo</a> and <a href=\"https://github.com/edgar971/number-predictor\">source code</a>.</p>\n<h2>Model Architecture</h2>\n<p>A Convolutional Neural Network (CNN) with 5 layers, 1 input 3 hidden and 1 for output. See code for more on activation function and other info on the model.</p>\n<h2>General Architecture</h2>\n<ol>\n<li>Load the MNIST dataset if training the model in the browser.</li>\n<li>Load the pre-trained model or the browser trained model.</li>\n<li>Take the input from the canvas element and do some processing to the pixels.</li>\n<li>Take the input and run it throw the trained model.</li>\n<li>Take the predictions and determine which one has the higher probability.</li>\n<li>Display the highest predicted number.</li>\n</ol>\n<h2>Final Thoughts</h2>\n<p>Overall I was very impressed by Tensorflow.js and the accuracy I got considering that it was running on the browser. One other thing to mention is that you don’t have to train your own model. You can use a pre-trained model for object detection, image caption, and more. The API is very simple to use and learn.</p>","frontmatter":{"title":"Number Predictor using Tensorflow.js and MNIST dataset","date":"August 09, 2018"}}},"pageContext":{"slug":"/2018/08/09/number-predictor-using-tensorflow-js-and-mnist-dataset/","previous":{"fields":{"slug":"/2018/04/08/resizing-images-in-elixir"},"frontmatter":{"title":"Resizing Images In Elixir with Mogrify"}},"next":{"fields":{"slug":"moving-my-blog-to-gatsby-js"},"frontmatter":{"title":"Moving my blog to Gatsby.js"}}}}