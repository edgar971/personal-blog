{"data":{"site":{"siteMetadata":{"title":"Edgar Pino's Blog","author":"Edgar Pino"}},"markdownRemark":{"id":"3413e355-82df-54d7-a765-c2f929759acc","excerpt":"Welcome to part two of Getting Started with Ecto. In the last post we convered how to install and configure Ecto in our application. In this…","html":"<p>Welcome to part two of Getting Started with Ecto. In the last post we convered how to install and configure Ecto in our application. In this post we will cover migrations, schemas, changesets, and how to execute simple queries in Ecto.</p>\n<h2>Migrations</h2>\n<p>Now that we have a database, we are going to create tables and columns. To do that, we will create migrations that define the structure of our tables and define any relationships. Before we create our first migration, let’s look at the database design of our demo application.</p>\n<p><img src=\"/database-f6d1b6a1a6b5358b10c429995b038d48.svg\" alt=\"Database design\"></p>\n<ul>\n<li>Users have credentials with a unique email</li>\n<li>Challenges have many solutions.</li>\n<li>Users can have one solution per challenge.</li>\n</ul>\n<p>Lets create our first migration by running the following generator command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mix ecto.gen.migration create_users_table</code></pre></div>\n<p>That will create a file inside of <code class=\"language-text\">priv/repo/migrations/</code> that looks something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token keyword\">defmodule</span> GettingStartedWithEcto<span class=\"token punctuation\">.</span>Repo<span class=\"token punctuation\">.</span>Migrations<span class=\"token punctuation\">.</span>CreateUsersTable <span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">use</span> Ecto<span class=\"token punctuation\">.</span>Migration\n\n  <span class=\"token keyword\">def</span> change <span class=\"token keyword\">do</span>\n\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>Let’s define our table inside the <code class=\"language-text\">change</code> function that allows us to create reversible migrations.</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token keyword\">def</span> change <span class=\"token keyword\">do</span>\n  create table<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:users</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:name</span><span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:string</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:age</span><span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:integer</span><span class=\"token punctuation\">)</span>\n\n    timestamps<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<h2>Schemas</h2>\n<h2>Schema Changesets</h2>","frontmatter":{"title":"Getting Started with Ecto: Part 2","date":"October 03, 2018"}}},"pageContext":{"slug":"/getting-started-with-ecto-part-2/","previous":{"fields":{"slug":"/getting-started-with-ecto-part-1/"},"frontmatter":{"title":"Getting Started with Ecto: Part 1"}},"next":null}}